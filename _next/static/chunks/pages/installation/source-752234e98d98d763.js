(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[354],{7997:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/installation/source",function(){return t(9006)}])},7845:function(e,n,t){"use strict";var i=t(5893);n.Z={github:"https://github.com/wiocoin/website",docsRepositoryBase:"https://github.com/wiocoin/website/blob/master",titleSuffix:" \u2013 Wiocoin",logo:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{className:"mr-2 font-extrabold hidden md:inline",children:"Wiocoin (WIO)"}),(0,i.jsx)("span",{className:"text-gray-600 font-normal hidden md:inline",children:"World is One Coin"})]}),head:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("meta",{name:"msapplication-TileColor",content:"#ffffff"}),(0,i.jsx)("meta",{name:"theme-color",content:"#ffffff"}),(0,i.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,i.jsx)("meta",{httpEquiv:"Content-Language",content:"en"}),(0,i.jsx)("meta",{name:"description",content:"Wiocoin: the Next.js site builder"}),(0,i.jsx)("meta",{name:"og:description",content:"Wiocoin: the Next.js site builder"}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.jsx)("meta",{name:"twitter:image",content:"https://wiocoin.vercel.app/og.png"}),(0,i.jsx)("meta",{name:"twitter:site:domain",content:"wiocoin.vercel.app"}),(0,i.jsx)("meta",{name:"twitter:url",content:"https://wiocoin.vercel.app"}),(0,i.jsx)("meta",{name:"og:title",content:"Wiocoin: Next.js static site generator"}),(0,i.jsx)("meta",{name:"og:image",content:"https://wiocoin.vercel.app/og.png"}),(0,i.jsx)("meta",{name:"apple-mobile-web-app-title",content:"Wiocoin"}),(0,i.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-icon-180x180.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"192x192",href:"/android-icon-192x192.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon-32x32.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"96x96",href:"/favicon-96x96.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon-16x16.png"}),(0,i.jsx)("meta",{name:"msapplication-TileImage",content:"/ms-icon-144x144.png"})]}),search:!0,prevLinks:!0,nextLinks:!0,footer:!0,footerEditLink:"Edit this page on GitHub",footerText:(0,i.jsxs)(i.Fragment,{children:["MIT ",(new Date).getFullYear()," \xa9 Wiocoin."]}),unstable_faviconGlyph:"\ud83d\udc4b"}},9006:function(e,n,t){"use strict";t.r(n);t(7294);var i=t(3905),o=t(7829),a=t.n(o),s=t(3805),l=t(7845);function r(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=function(e){return(0,s.withSSG)(a()({filename:"C:/Users/lenovo/Documents/GitHub/website/pages/installation/source/index.mdx",route:"/installation/source",meta:{},pageMap:[{name:"get-started",route:"\\get-started"},{name:"index",route:"\\"},{name:"installation",children:[{name:"download",children:[{name:"index",route:"\\installation\\download"},{name:"macosx",route:"\\installation\\download\\macosx"},{name:"meta.json",meta:{index:"Windows 10/8/7",macosx:"MacOS",unix:"Linux/Unix X86/64"}},{name:"unix",route:"\\installation\\download\\unix"}],route:"\\installation\\download"},{name:"meta.json",meta:{source:"From Source",download:"Downloads"}},{name:"source",children:[{name:"bsd",route:"\\installation\\source\\bsd"},{name:"index",route:"\\installation\\source"},{name:"linux",route:"\\installation\\source\\linux"},{name:"meta.json",meta:{index:"Windows Build",linux:"Unix Build",osx:"Mac OS Build",bsd:"Build on OpenBSD"}},{name:"osx",route:"\\installation\\source\\osx"}],route:"\\installation\\source"}],route:"\\installation"},{name:"meta.json",meta:{index:"Introduction","get-started":"Development Process",testing:"Testing",installation:"Installation",runnig:"Running"}},{name:"running",children:[{name:"meta.json",meta:{running:"Using Wiocoind and Wiocoin-cli"}},{name:"running",route:"\\running\\running"}],route:"\\running"},{name:"testing",route:"\\testing"}]},l.Z))(e)};function m(e){var n=e.components,t=r(e,["components"]);return(0,i.mdx)(d,Object.assign({components:n},t),(0,i.mdx)("h1",null,"WINDOWS BUILD NOTES"),(0,i.mdx)("p",null,"===================="),(0,i.mdx)("p",null,"Below are some notes on how to build Wiocoin Core for Windows."),(0,i.mdx)("p",null,"The options known to work for building Wiocoin Core on Windows are:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"On Linux, using the ",(0,i.mdx)("a",{href:"https://mingw-w64.org/doku.php",parentName:"li"},"Mingw-w64")," cross compiler tool chain. Ubuntu Bionic 18.04 is required")),(0,i.mdx)("p",null,"and is the platform used to build the Wiocoin Core Windows release binaries."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"On Windows, using [Windows")),(0,i.mdx)("p",null,"Subsystem for Linux (WSL)](",(0,i.mdx)("a",{href:"https://msdn.microsoft.com/commandline/wsl/about",parentName:"p"},"https://msdn.microsoft.com/commandline/wsl/about"),") and the Mingw-w64 cross compiler tool chain."),(0,i.mdx)("p",null,"Other options which may work, but which have not been extensively tested are (please contribute instructions):"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"On Windows, using a POSIX compatibility layer application such as ",(0,i.mdx)("a",{href:"http://www.cygwin.com/",parentName:"li"},"cygwin")," or ",(0,i.mdx)("a",{href:"http://www.msys2.org/",parentName:"li"},"msys2"),"."),(0,i.mdx)("li",{parentName:"ul"},"On Windows, using a native compiler tool chain such as ",(0,i.mdx)("a",{href:"https://www.visualstudio.com",parentName:"li"},"Visual Studio"),".")),(0,i.mdx)("h2",null,"Installing Windows Subsystem for Linux"),(0,i.mdx)("hr",null),(0,i.mdx)("p",null,"With Windows 10, Microsoft has released a new feature named the ",(0,i.mdx)("a",{href:"https://msdn.microsoft.com/commandline/wsl/about",parentName:"p"},"Windows\r\nSubsystem for Linux (WSL)"),". This\r\nfeature allows you to run a bash shell directly on Windows in an Ubuntu-based\r\nenvironment. Within this environment you can cross compile for Windows without\r\nthe need for a separate Linux VM or server. Note that while WSL can be installed with\r\nother Linux variants, such as OpenSUSE, the following instructions have only been\r\ntested with Ubuntu."),(0,i.mdx)("p",null,"This feature is not supported in versions of Windows prior to Windows 10 or on\r\nWindows Server SKUs. In addition, it is available ",(0,i.mdx)("a",{href:"https://msdn.microsoft.com/en-us/commandline/wsl/install_guide",parentName:"p"},"only for 64-bit versions of\r\nWindows"),"."),(0,i.mdx)("p",null,"Full instructions to install WSL are available on the above link.\r\nTo install WSL on Windows 10 with Fall Creators Update installed (version >= 16215.0) do the following:"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},"Enable the Windows Subsystem for Linux feature")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Open the Windows Features dialog (",(0,i.mdx)("inlineCode",{parentName:"li"},"OptionalFeatures.exe"),")"),(0,i.mdx)("li",{parentName:"ul"},"Enable 'Windows Subsystem for Linux'"),(0,i.mdx)("li",{parentName:"ul"},"Click 'OK' and restart if necessary")),(0,i.mdx)("ol",{start:"2"},(0,i.mdx)("li",{parentName:"ol"},"Install Ubuntu")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},'Open Microsoft Store and search for "Ubuntu 18.04" or use ',(0,i.mdx)("a",{href:"https://www.microsoft.com/store/productId/9N9TNGVNDL3Q",parentName:"li"},"this link")),(0,i.mdx)("li",{parentName:"ul"},"Click Install")),(0,i.mdx)("ol",{start:"3"},(0,i.mdx)("li",{parentName:"ol"},"Complete Installation")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},'Open a cmd prompt and type "Ubuntu1804"'),(0,i.mdx)("li",{parentName:"ul"},"Create a new UNIX user account (this is a separate account from your Windows account)")),(0,i.mdx)("p",null,'After the bash shell is active, you can follow the instructions below, starting\r\nwith the "Cross-compilation" section. Compiling the 64-bit version is\r\nrecommended, but it is possible to compile the 32-bit version.'),(0,i.mdx)("h2",null,"Cross-compilation for Ubuntu and Windows Subsystem for Linux"),(0,i.mdx)("p",null,"The steps below can be performed on Ubuntu (including in a VM) or WSL. The depends system\r\nwill also work on other Linux distributions, however the commands for\r\ninstalling the toolchain will be different."),(0,i.mdx)("p",null,"First, install the general dependencies:"),(0,i.mdx)("p",null,"sudo apt update\r\nsudo apt upgrade\r\nsudo apt install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git"),(0,i.mdx)("p",null,"A host toolchain (",(0,i.mdx)("inlineCode",{parentName:"p"},"build-essential"),") is necessary because some dependency\r\npackages (such as ",(0,i.mdx)("inlineCode",{parentName:"p"},"protobuf"),") need to build host utilities that are used in the\r\nbuild process."),(0,i.mdx)("p",null,"See ",(0,i.mdx)("a",{href:"dependencies.md",parentName:"p"},"dependencies.md")," for a complete overview."),(0,i.mdx)("p",null,"If you want to build the windows installer with ",(0,i.mdx)("inlineCode",{parentName:"p"},"make deploy")," you need ",(0,i.mdx)("a",{href:"https://nsis.sourceforge.io/Main_Page",parentName:"p"},"NSIS"),":"),(0,i.mdx)("p",null,"sudo apt install nsis"),(0,i.mdx)("h2",null,"Building for 64-bit Windows"),(0,i.mdx)("p",null,"The first step is to install the mingw-w64 cross-compilation tool chain:"),(0,i.mdx)("p",null,"sudo apt install g++-mingw-w64-x86-64"),(0,i.mdx)("p",null,"Ubuntu Bionic 18.04 ",(0,i.mdx)("sup",{parentName:"p"},(0,i.mdx)("a",{href:"#footnote1",parentName:"sup"},"1")),":"),(0,i.mdx)("p",null,"sudo update-alternatives --config x86_64-w64-mingw32-g++ # Set the default mingw32 g++ compiler option to posix."),(0,i.mdx)("p",null,"Once the toolchain is installed the build steps are common:"),(0,i.mdx)("p",null,"Note that for WSL the Wiocoin Core source path MUST be somewhere in the default mount file system, for\r\nexample /usr/src/wiocoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\r\nThis means you cannot use a directory that is located directly on the host Windows file system to perform the build."),(0,i.mdx)("p",null,"Acquire the source in the usual way:"),(0,i.mdx)("p",null,"git clone ",(0,i.mdx)("a",{href:"https://github.com/wiocoin-project/wiocoin.git",parentName:"p"},"https://github.com/wiocoin-project/wiocoin.git")),(0,i.mdx)("p",null,"Once the source code is ready the build steps are below:"),(0,i.mdx)("p",null,"PATH=$(echo \"$PATH\" | sed -e 's/:/mnt.*//g') # strip out problematic Windows %PATH% imported var\r\ncd depends\r\nmake HOST=x86_64-w64-mingw32\r\ncd ..\r\n./autogen.sh # not required when building from tarball\r\nCONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/\r\nmake"),(0,i.mdx)("h2",null,"Building for 32-bit Windows"),(0,i.mdx)("p",null,"To build executables for Windows 32-bit, install the following dependencies:"),(0,i.mdx)("p",null,"sudo apt install g++-mingw-w64-i686 mingw-w64-i686-dev"),(0,i.mdx)("p",null,"For Ubuntu Bionic 18.04 and Windows Subsystem for Linux ",(0,i.mdx)("sup",{parentName:"p"},(0,i.mdx)("a",{href:"#footnote1",parentName:"sup"},"1")),":"),(0,i.mdx)("p",null,"sudo update-alternatives --config i686-w64-mingw32-g++ # Set the default mingw32 g++ compiler option to posix."),(0,i.mdx)("p",null,"Note that for WSL the Wiocoin Core source path MUST be somewhere in the default mount file system, for\r\nexample /usr/src/wiocoin, AND not under /mnt/d/. If this is not the case the dependency autoconf scripts will fail.\r\nThis means you cannot use a directory that located directly on the host Windows file system to perform the build."),(0,i.mdx)("p",null,"Acquire the source in the usual way:"),(0,i.mdx)("p",null,"git clone ",(0,i.mdx)("a",{href:"https://github.com/wiocoin-project/wiocoin.git",parentName:"p"},"https://github.com/wiocoin-project/wiocoin.git")),(0,i.mdx)("p",null,"Then build using:"),(0,i.mdx)("p",null,"PATH=$(echo \"$PATH\" | sed -e 's/:/mnt.*//g') # strip out problematic Windows %PATH% imported var\r\ncd depends\r\nmake HOST=i686-w64-mingw32\r\ncd ..\r\n./autogen.sh # not required when building from tarball\r\nCONFIG_SITE=$PWD/depends/i686-w64-mingw32/share/config.site ./configure --prefix=/\r\nmake"),(0,i.mdx)("h2",null,"Depends system"),(0,i.mdx)("p",null,"For further documentation on the depends system see ",(0,i.mdx)("a",{href:"../depends/README.md",parentName:"p"},"README.md")," in the depends directory."),(0,i.mdx)("h2",null,"Installation"),(0,i.mdx)("p",null,"After building using the Windows subsystem it can be useful to copy the compiled\r\nexecutables to a directory on the Windows drive in the same directory structure\r\nas they appear in the release ",(0,i.mdx)("inlineCode",{parentName:"p"},".zip")," archive. This can be done in the following\r\nway. This will install to ",(0,i.mdx)("inlineCode",{parentName:"p"},"c:\\workspace\\wiocoin"),", for example:"),(0,i.mdx)("p",null,"make install DESTDIR=/mnt/c/workspace/wiocoin"),(0,i.mdx)("p",null,"You can also create an installer using:"),(0,i.mdx)("p",null,"make deploy"),(0,i.mdx)("h2",null,"Footnotes"),(0,i.mdx)("p",null,"Starting from Ubuntu Xenial 16.04, both the 32 and 64 bit Mingw-w64 packages install two different\r\ncompiler options to allow a choice between either posix or win32 threads. The default option is win32 threads which is the more\r\nefficient since it will result in binary code that links directly with the Windows kernel32.lib. Unfortunately, the headers\r\nrequired to support win32 threads conflict with some of the classes in the C++11 standard library, in particular std::mutex.\r\nIt's not possible to build the Wiocoin Core code using the win32 version of the Mingw-w64 cross compilers (at least not without\r\nmodifying headers in the Wiocoin Core source code)."))}m.isMDXComponent=!0,n.default=m}},function(e){e.O(0,[511,774,888,179],(function(){return n=7997,e(e.s=n);var n}));var n=e.O();_N_E=n}]);