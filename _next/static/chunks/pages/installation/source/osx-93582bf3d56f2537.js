(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[49],{6683:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/installation/source/osx",function(){return t(7380)}])},7845:function(e,n,t){"use strict";var i=t(5893);n.Z={github:"https://github.com/wiocoin/website",docsRepositoryBase:"https://github.com/wiocoin/website/blob/master",titleSuffix:" \u2013 Wiocoin",logo:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("span",{className:"mr-2 font-extrabold hidden md:inline",children:"Wiocoin (WIO)"}),(0,i.jsx)("span",{className:"text-gray-600 font-normal hidden md:inline",children:"World is One Coin"})]}),head:(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("meta",{name:"msapplication-TileColor",content:"#ffffff"}),(0,i.jsx)("meta",{name:"theme-color",content:"#ffffff"}),(0,i.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),(0,i.jsx)("meta",{httpEquiv:"Content-Language",content:"en"}),(0,i.jsx)("meta",{name:"description",content:"Wiocoin: the Next.js site builder"}),(0,i.jsx)("meta",{name:"og:description",content:"Wiocoin: the Next.js site builder"}),(0,i.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,i.jsx)("meta",{name:"twitter:image",content:"https://wiocoin.vercel.app/og.png"}),(0,i.jsx)("meta",{name:"twitter:site:domain",content:"wiocoin.vercel.app"}),(0,i.jsx)("meta",{name:"twitter:url",content:"https://wiocoin.vercel.app"}),(0,i.jsx)("meta",{name:"og:title",content:"Wiocoin: Next.js static site generator"}),(0,i.jsx)("meta",{name:"og:image",content:"https://wiocoin.vercel.app/og.png"}),(0,i.jsx)("meta",{name:"apple-mobile-web-app-title",content:"Wiocoin"}),(0,i.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:"/apple-icon-180x180.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"192x192",href:"/android-icon-192x192.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:"/favicon-32x32.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"96x96",href:"/favicon-96x96.png"}),(0,i.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:"/favicon-16x16.png"}),(0,i.jsx)("meta",{name:"msapplication-TileImage",content:"/ms-icon-144x144.png"})]}),search:!0,prevLinks:!0,nextLinks:!0,footer:!0,footerEditLink:"Edit this page on GitHub",footerText:(0,i.jsxs)(i.Fragment,{children:["MIT ",(new Date).getFullYear()," \xa9 Wiocoin."]}),unstable_faviconGlyph:"\ud83d\udc4b"}},7380:function(e,n,t){"use strict";t.r(n);t(7294);var i=t(3905),o=t(7829),a=t.n(o),l=t(3805),s=t(7845);function r(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=function(e){return(0,l.withSSG)(a()({filename:"C:/Users/lenovo/Documents/GitHub/website/pages/installation/source/osx.mdx",route:"/installation/source/osx",meta:{},pageMap:[{name:"get-started",route:"\\get-started"},{name:"index",route:"\\"},{name:"installation",children:[{name:"download",children:[{name:"index",route:"\\installation\\download"},{name:"macosx",route:"\\installation\\download\\macosx"},{name:"meta.json",meta:{index:"Windows 10/8/7",macosx:"MacOS",unix:"Linux/Unix X86/64"}},{name:"unix",route:"\\installation\\download\\unix"}],route:"\\installation\\download"},{name:"meta.json",meta:{source:"From Source",download:"Downloads"}},{name:"source",children:[{name:"bsd",route:"\\installation\\source\\bsd"},{name:"index",route:"\\installation\\source"},{name:"linux",route:"\\installation\\source\\linux"},{name:"meta.json",meta:{index:"Windows Build",linux:"Unix Build",osx:"Mac OS Build",bsd:"Build on OpenBSD"}},{name:"osx",route:"\\installation\\source\\osx"}],route:"\\installation\\source"}],route:"\\installation"},{name:"meta.json",meta:{index:"Introduction","get-started":"Development Process",testing:"Testing",installation:"Installation",runnig:"Running"}},{name:"running",children:[{name:"meta.json",meta:{running:"Using Wiocoind and Wiocoin-cli"}},{name:"running",route:"\\running\\running"}],route:"\\running"},{name:"testing",route:"\\testing"}]},s.Z))(e)};function m(e){var n=e.components,t=r(e,["components"]);return(0,i.mdx)(d,Object.assign({components:n},t),(0,i.mdx)("h1",null,"macOS Build Instructions and Notes"),(0,i.mdx)("p",null,"====================================\r\nThe commands in this guide should be executed in a Terminal application.\r\nThe built-in one is located in ",(0,i.mdx)("inlineCode",{parentName:"p"},"/Applications/Utilities/Terminal.app"),"."),(0,i.mdx)("h2",null,"Preparation"),(0,i.mdx)("p",null,"Install the macOS command line tools:"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"xcode-select --install")),(0,i.mdx)("p",null,"When the popup appears, click ",(0,i.mdx)("inlineCode",{parentName:"p"},"Install"),"."),(0,i.mdx)("p",null,"Then install ",(0,i.mdx)("a",{href:"https://brew.sh",parentName:"p"},"Homebrew"),"."),(0,i.mdx)("h2",null,"Dependencies"),(0,i.mdx)("p",null,"brew install automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf python qt libevent qrencode"),(0,i.mdx)("p",null,"See ",(0,i.mdx)("a",{href:"dependencies.md",parentName:"p"},"dependencies.md")," for a complete overview."),(0,i.mdx)("p",null,"If you want to build the disk image with ",(0,i.mdx)("inlineCode",{parentName:"p"},"make deploy")," (.dmg / optional), you need RSVG:"),(0,i.mdx)("p",null,"brew install librsvg"),(0,i.mdx)("h2",null,"Berkeley DB"),(0,i.mdx)("p",null,"It is recommended to use Berkeley DB 4.8. If you have to build it yourself,\r\nyou can use ",(0,i.mdx)("a",{href:"/contrib/install_db4.sh",parentName:"p"},"the installation script included in contrib/"),"\r\nlike so:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{className:"language-shell",parentName:"pre"},"./contrib/install_db4.sh .\n")),(0,i.mdx)("p",null,"from the root of the repository."),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Note"),": You only need Berkeley DB if the wallet is enabled (see ",(0,i.mdx)("a",{href:"/doc/build-osx.md#disable-wallet-mode",parentName:"p"},(0,i.mdx)("em",{parentName:"a"},"Disable-wallet mode")),")."),(0,i.mdx)("h2",null,"Build Wiocoin Core"),(0,i.mdx)("ol",null,(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"Clone the Wiocoin Core source code:"),(0,i.mdx)("p",{parentName:"li"},"git clone ",(0,i.mdx)("a",{href:"https://github.com/wiocoin-project/wiocoin",parentName:"p"},"https://github.com/wiocoin-project/wiocoin"),"\r\ncd wiocoin")),(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"Build Wiocoin Core:"),(0,i.mdx)("p",{parentName:"li"},"Configure and build the headless Wiocoin Core binaries as well as the GUI (if Qt is found)."),(0,i.mdx)("p",{parentName:"li"},"You can disable the GUI build by passing ",(0,i.mdx)("inlineCode",{parentName:"p"},"--without-gui")," to configure."),(0,i.mdx)("p",{parentName:"li"},"./autogen.sh\r\n./configure\r\nmake")),(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"It is recommended to build and run the unit tests:"),(0,i.mdx)("p",{parentName:"li"},"make check")),(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"You can also create a .dmg that contains the .app bundle (optional):"),(0,i.mdx)("p",{parentName:"li"},"make deploy")),(0,i.mdx)("li",{parentName:"ol"},(0,i.mdx)("p",{parentName:"li"},"Installation into user directories (optional):"),(0,i.mdx)("p",{parentName:"li"},"make install"),(0,i.mdx)("p",{parentName:"li"},"or"),(0,i.mdx)("p",{parentName:"li"},"cd ~/wiocoin/src\r\ncp wiocoind /usr/local/bin/\r\ncp wiocoin-cli /usr/local/bin/"))),(0,i.mdx)("h2",null,"Disable-wallet mode"),(0,i.mdx)("p",null,"When the intention is to run only a P2P node without a wallet, Wiocoin Core may be compiled in\r\ndisable-wallet mode with:"),(0,i.mdx)("p",null,"./configure --disable-wallet"),(0,i.mdx)("p",null,"In this case there is no dependency on Berkeley DB 4.8."),(0,i.mdx)("p",null,"Mining is also possible in disable-wallet mode using the ",(0,i.mdx)("inlineCode",{parentName:"p"},"getblocktemplate")," RPC call."),(0,i.mdx)("h2",null,"Running"),(0,i.mdx)("p",null,"Wiocoin Core is now available at ",(0,i.mdx)("inlineCode",{parentName:"p"},"./src/wiocoind")),(0,i.mdx)("p",null,"Before running, you may create an empty configuration file:"),(0,i.mdx)("p",null,'mkdir -p "/Users/$USER/Library/Application Support/Wiocoin"\r\ntouch "/Users/$USER/Library/Application Support/Wiocoin/wiocoin.conf"\r\nchmod 600 "/Users/$USER/Library/Application Support/Wiocoin/wiocoin.conf"'),(0,i.mdx)("p",null,"The first time you run wiocoind, it will start downloading the blockchain. This process could take many hours, or even days on slower than average systems."),(0,i.mdx)("p",null,"You can monitor the download process by looking at the debug.log file:"),(0,i.mdx)("p",null,"tail -f $HOME/Library/Application\\ Support/Wiocoin/debug.log"),(0,i.mdx)("h2",null,"Other commands:"),(0,i.mdx)("p",null,"./src/wiocoind -daemon # Starts the wiocoin daemon.\r\n./src/wiocoin-cli --help # Outputs a list of command-line options.\r\n./src/wiocoin-cli help # Outputs a list of RPC commands when the daemon is running."),(0,i.mdx)("h2",null,"Notes"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},"Tested on OS X 10.10 Yosemite through macOS 10.13 High Sierra on 64-bit Intel processors only.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},"Building with downloaded Qt binaries is not officially supported. See the notes in ",(0,i.mdx)("a",{href:"https://github.com/bitcoin/bitcoin/issues/7714",parentName:"p"},"#7714")))),(0,i.mdx)("h2",null,"Deterministic macOS DMG Notes"),(0,i.mdx)("p",null,"Working macOS DMGs are created in Linux by combining a recent clang,\r\nthe Apple binutils (ld, ar, etc) and DMG authoring tools."),(0,i.mdx)("p",null,"Apple uses clang extensively for development and has upstreamed the necessary\r\nfunctionality so that a vanilla clang can take advantage. It supports the use\r\nof -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\r\nwhen building for macOS."),(0,i.mdx)("p",null,"Apple's version of binutils (called cctools) contains lots of functionality\r\nmissing in the FSF's binutils. In addition to extra linker options for\r\nframeworks and sysroots, several other tools are needed as well such as\r\ninstall_name_tool, lipo, and nmedit. These do not build under linux, so they\r\nhave been patched to do so. The work here was used as a starting point:\r\n",(0,i.mdx)("a",{href:"https://github.com/mingwandroid/toolchain4",parentName:"p"},"mingwandroid / toolchain4"),"."),(0,i.mdx)("p",null,"In order to build a working toolchain, the following source packages are needed\r\nfrom Apple: cctools, dyld, and ld64."),(0,i.mdx)("p",null,"These tools inject timestamps by default, which produce non-deterministic\r\nbinaries. The ZERO_AR_DATE environment variable is used to disable that."),(0,i.mdx)("p",null,"This version of cctools has been patched to use the current version of clang's\r\nheaders and its libLTO.so rather than those from llvmgcc, as it was\r\noriginally done in toolchain4."),(0,i.mdx)("p",null,"To complicate things further, all builds must target an Apple SDK. These SDKs\r\nare free to download, but not redistributable.\r\nTo obtain it, register for a developer account, then download the ",(0,i.mdx)("a",{href:"https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg",parentName:"p"},"Xcode 7.3.1 dmg"),"."),(0,i.mdx)("p",null,"This file is several gigabytes in size, but only a single directory inside is\r\nneeded:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\n")),(0,i.mdx)("p",null,"Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\r\nTo create a tarball suitable for Gitian input, there are two options:"),(0,i.mdx)("p",null,"Using macOS, you can mount the dmg, and then create it with:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre"},"  $ hdiutil attach Xcode_7.3.1.dmg\r\n  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n")),(0,i.mdx)("p",null,"Alternatively, you can use 7zip and SleuthKit to extract the files one by one.\r\nThe script contrib/macdeploy/extract-osx-sdk.sh automates this. First ensure\r\nthe dmg file is in the current directory, and then run the script. You may wish\r\nto delete the intermediate 5.hfs file and MacOSX10.11.sdk (the directory) when\r\nyou've confirmed the extraction succeeded."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{className:"language-bash",parentName:"pre"},"apt-get install p7zip-full sleuthkit\r\ncontrib/macdeploy/extract-osx-sdk.sh\r\nrm -rf 5.hfs MacOSX10.11.sdk\n")),(0,i.mdx)("p",null,"The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\r\nwhich are created using these tools. The build process has been designed to\r\navoid including the SDK's files in Gitian's outputs. All interim tarballs are\r\nfully deterministic and may be freely redistributed."),(0,i.mdx)("p",null,"genisoimage is used to create the initial DMG. It is not deterministic as-is,\r\nso it has been patched. A system genisoimage will work fine, but it will not\r\nbe deterministic because the file-order will change between invocations.\r\nThe patch can be seen here: ",(0,i.mdx)("a",{href:"https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff",parentName:"p"},"theuni / osx-cross-depends"),".\r\nNo effort was made to fix this cleanly, so it likely leaks memory badly. But\r\nit's only used for a single invocation, so that's no real concern."),(0,i.mdx)("p",null,"genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\r\nlibdmg-hfsplus project is used to compress it. There are several bugs in this\r\ntool and its maintainer has seemingly abandoned the project. It has been forked\r\nand is available (with fixes) here: ",(0,i.mdx)("a",{href:"https://github.com/theuni/libdmg-hfsplus",parentName:"p"},"theuni / libdmg-hfsplus"),"."),(0,i.mdx)("p",null,"The 'dmg' tool has the ability to create DMGs from scratch as well, but this\r\nfunctionality is broken. Only the compression feature is currently used.\r\nIdeally, the creation could be fixed and genisoimage would no longer be necessary."),(0,i.mdx)("p",null,"Background images and other features can be added to DMG files by inserting a\r\n.DS_Store before creation. This is generated by the script\r\ncontrib/macdeploy/custom_dsstore.py."),(0,i.mdx)("p",null,"As of OS X 10.9 Mavericks, using an Apple-blessed key to sign binaries is a\r\nrequirement in order to satisfy the new Gatekeeper requirements. Because this\r\nprivate key cannot be shared, we'll have to be a bit creative in order for the\r\nbuild process to remain somewhat deterministic. Here's how it works:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Builders use Gitian to create an unsigned release. This outputs an unsigned\r\ndmg which users may choose to bless and run. It also outputs an unsigned app\r\nstructure in the form of a tarball, which also contains all of the tools\r\nthat have been previously (deterministically) built in order to create a\r\nfinal dmg."),(0,i.mdx)("li",{parentName:"ul"},"The Apple keyholder uses this unsigned app to create a detached signature,\r\nusing the script that is also included there. Detached signatures are available from this ",(0,i.mdx)("a",{href:"https://github.com/bitcoin-core/bitcoin-detached-sigs",parentName:"li"},"repository"),"."),(0,i.mdx)("li",{parentName:"ul"},"Builders feed the unsigned app + detached signature back into Gitian. It\r\nuses the pre-built tools to recombine the pieces into a deterministic dmg.")))}m.isMDXComponent=!0,n.default=m}},function(e){e.O(0,[511,774,888,179],(function(){return n=6683,e(e.s=n);var n}));var n=e.O();_N_E=n}]);